version: "2.4"

secrets:
  SecretKey:
    file: docker/secret_key.txt
  DBPassword:
    file: docker/db_password.txt

networks:
  default:
    driver: bridge
    ipam:
      config:
        # this value is a soft-reservation of the subnet in
        # order to reduce friction w.r.t. a given local docker
        # environment and project configuration.
        #
        # if you encounter network definition conflicts, change
        # the value below and revise its use in 'local.*.cfg'.
        - subnet: 172.23.0.0/16

services:
  postgres:
    image: kartoza/postgis:10.0-2.4
    networks:
      - default
    environment:
      # In some cases, the logic present in the kartoza/postgis
      # entrypoint may fail to recognize that this database already
      # exists when the container volume has already such a database
      # present; in this case, comment the 'POSTGRES_DBNAME' entry
      # in order to succesfully boot the container.
      - POSTGRES_USER=invasives
      - POSTGRES_PASS=invasives
      - POSTGRES_DBNAME=invasives
      - ALLOW_IP_RANGE=172.23.0.0/16
    volumes:
      - ./volumes/postgres:/var/lib/postgresql

  rabbitmq:
    extends:
      file: docker-compose.base.yml
      service: rabbitmq
    networks:
      - default
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    # override hostname to prevent reinitialization of data
    # on container delete/init cycle.
    #   Refs: https://github.com/docker-library/rabbitmq/issues/106#issuecomment-241882358
    hostname: 'rabbitmq-dev'
    user: '1000'  # adjust uid with a local account uid

  app:
    build: docker
    extends:
      file: docker-compose.base.yml
      service: app
    environment:
      - APP_CONFIG=app.docker.yml
      - EMCEE_CMD_ENV=docker
    networks:
      - default
    ports:
      - 8000:8000
    volumes:
      - ./:/webapps/oregoninvasiveshotline
      - ./volumes/static:/static
      - ./volumes/media:/media
    depends_on:
      - postgres
      - rabbitmq
    secrets:
      - SecretKey
      - DBPassword

  celery:
    build: docker
    extends:
      file: docker-compose.base.yml
      service: celery
    environment:
      - APP_CONFIG=app.docker.yml
      - EMCEE_CMD_ENV=docker
    networks:
      - default
    volumes:
      - ./:/webapps/oregoninvasiveshotline
      - ./volumes/media:/media
    depends_on:
      - app
    secrets:
      - SecretKey
      - DBPassword
