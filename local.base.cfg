[DEFAULT]
DISTRIBUTION = "psu.oit.arc.oregoninvasiveshotline"

PROJECT.title = "Oregon Invasives Hotline"

;;;
;;; BEGIN ARCUTILS MIGRATED CONFIGURATION
;;;
; Miscellaneous Django stuff
DEBUG = false
ROOT_URLCONF = "oregoninvasiveshotline.urls"
WSGI_APPLICATION = "oregoninvasiveshotline.wsgi.application"

; Auth
; AUTH_PASSWORD_VALIDATORS works only with Django >= 1.9.
AUTH_PASSWORD_VALIDATORS = [
        {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"},
        {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
        {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
        {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"}
    ]
; The STAFF and SUPERUSERS settings can be used to automatically create
; staff and superusers on first login. The default CAS response callback
; uses them.
STAFF = []
; If a user is in this list, they'll automatically be made staff too
; (when using the default CAS response callback).
SUPERUSERS = []

; Django REST Framework
REST_FRAMEWORK.DEFAULT_AUTHENTICATION_CLASSES = [
        "rest_framework.authentication.SessionAuthentication"
    ]
REST_FRAMEWORK.DEFAULT_RENDERER_CLASSES = [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer"
    ]

; Email
DEFAULT_FROM_EMAIL = "oregoninvasiveshotline-{{ENV}}.info@pdx.edu"
SERVER_EMAIL = "oregoninvasiveshotline-{{ENV}}.errors@pdx.edu"

; Localization
LANGUAGE_CODE = "en-us"
TIME_ZONE = "America/Los_Angeles"
USE_I18N = true
USE_L10N = true
USE_TZ = true

; Logging
LOGGING.version = 1
LOGGING.disable_existing_loggers = false
LOGGING.formatters.verbose.style = "{"
LOGGING.formatters.verbose.format = "[{asctime}] {levelname} {pathname}:{lineno} {message}"
LOGGING.formatters.verbose.datefmt = "%d/%b/%Y %H:%M:%S"
LOGGING.handlers.console.class = "logging.StreamHandler"
LOGGING.handlers.console.formatter = "verbose"
LOGGING.handlers.null.class = "logging.NullHandler"

; Templates
TEMPLATES.0.BACKEND = "django.template.backends.django.DjangoTemplates"

; In simple cases, you can set this to a list of additional apps to
; install in the project's settings.
EXTRA.INSTALLED_APPS = null
; A dict of { app in INSTALLED_APPS => app to swap in }
; Example: {"django.contrib.admin": "django.contrib.admin.apps.SimpleAdminConfig"}
SWAP.INSTALLED_APPS = null

; The MIDDLEWARE setting works only with Django >= 1.10. If both
; MIDDLEWARE and MIDDLEWARE_CLASSES are set on Django >= 1.10,
; MIDDLEWARE will take precedence. The following list is the default
; provided by `django-admin startproject`.
MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.middleware.csrf.CsrfViewMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware"
    ]

; In simple cases, you can set this to a list of additional middleware
; in the project's settings.
EXTRA.MIDDLEWARE_CLASSES = null
; A dict of { middleware in MIDDLEWARE_CLASSES => middleware to swap in }
SWAP.MIDDLEWARE_CLASSES = null
;;;
;;; END ARCUTILS MIGRATED CONFIGURATION
;;;

; Miscellaneous
ITEMS_PER_PAGE = 25
SITE_ID = 1

; Sets ERROR tag to use the Bootstrap danger style
MESSAGE_TAGS.(40) = "danger"

; Auth
AUTHENTICATION_BACKENDS = ["django.contrib.auth.backends.AllowAllUsersModelBackend"]
AUTH_USER_MODEL = "users.User"
LOGIN_URL = "login"
LOGIN_REDIRECT_URL = "users-home"

; Database
DATABASES.default.ENGINE = "django.contrib.gis.db.backends.postgis"
DATABASES.default.ATOMIC_REQUESTS = true

CONTACT_EMAIL = "imapinvasivesoregon@gmail.com"

; Haystack
HAYSTACK_CONNECTIONS.default.ENGINE = "haystack.backends.elasticsearch2_backend.Elasticsearch2SearchEngine"
HAYSTACK_SIGNAL_PROCESSOR = "haystack.signals.RealtimeSignalProcessor"

; Static files
STATIC_URL = "/static/"
MEDIA_URL = "/media/"

; Templates
TEMPLATES.0.OPTIONS.context_processors = [
        "django.template.context_processors.debug",
        "django.template.context_processors.request",
        "django.contrib.auth.context_processors.auth",
        "django.contrib.messages.context_processors.messages",
        "django.template.context_processors.media",
        "django.template.context_processors.static",
        "django.template.context_processors.tz",
        "oregoninvasiveshotline.context_processors.defaults"
    ]

TEMPLATES.0.OPTIONS.builtins = [
        "django.contrib.staticfiles.templatetags.staticfiles",
        "bootstrapform.templatetags.bootstrap",
        "oregoninvasiveshotline.templatetags.arc"
    ]

INSTALLED_APPS = [
        "oregoninvasiveshotline.apps.MainAppConfig",
        "oregoninvasiveshotline.permissions",
        "oregoninvasiveshotline.comments",
        "oregoninvasiveshotline.counties",
        "oregoninvasiveshotline.images",
        "oregoninvasiveshotline.notifications",
        "oregoninvasiveshotline.pages",
        "oregoninvasiveshotline.reports",
        "oregoninvasiveshotline.species",
        "oregoninvasiveshotline.users",

        ; Third party
        "bootstrapform",
        "haystack",
        "rest_framework",

        ; Django
        "django.contrib.admin",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "django.contrib.sites",
        "django.contrib.flatpages",
        "django.contrib.gis"
    ]

APPEND.MIDDLEWARE = ["django.middleware.http.ConditionalGetMiddleware"]

; User notifications
NOTIFICATIONS.from_email = "webmaster@localhost"
NOTIFICATIONS.login_link__subject = "{{PROJECT.title}} - Login Link"
NOTIFICATIONS.new_report__subject = "{{PROJECT.title}} - Thank you for your report"
NOTIFICATIONS.notify_new_owner__subject = "A subscription has been assigned to you on {{PROJECT.title}}"
NOTIFICATIONS.notify_new_submission__subject = "New {{PROJECT.title}} submission for review"
NOTIFICATIONS.notify_new_comment__subject = "{{PROJECT.title}} - New Comment on Report"
NOTIFICATIONS.invite_reviewer__subject = "{{PROJECT.title}} - Submission Review Request"

ICON_DEFAULT_COLOR = "#999999"
ICON_DIR = "generated_icons"
ICON_TYPE = "png"

; CSRF Defaults
CSRF_COOKIE_HTTPONLY = true
CSRF_COOKIE_SECURE = true

; Google Analytics
GOOGLE.analytics.tracking_id = "UA-57378202-5"

DATABASES.default.NAME = "invasives"
DATABASES.default.USER = "invasives"
DATABASES.default.PASSWORD = "invasives"

HAYSTACK_CONNECTIONS.default.URL = ""
HAYSTACK_CONNECTIONS.default.INDEX_NAME = "oregoninvasiveshotline"
ELASTICSEARCH_CONNECTIONS.default.HOSTS = ""
ELASTICSEARCH_CONNECTIONS.default.INDEX_NAME = "oregoninvasiveshotline"

SENTRY_DSN = "https://263913aeb1264f1bbc40c1b35dda9933@o50547.ingest.sentry.io/153798"

[travis]
ENV = "travis"
TEST = true
ADMINS = []
ALLOWED_HOSTS = []
MANAGERS = []
SECRET_KEY = "NOT A SECRET"
DATABASES.default.HOST = "localhost"
DATABASES.default.PASSWORD = ""
HAYSTACK_CONNECTIONS.default.URL = "localhost:9200"
CELERY_TASK_ALWAYS_EAGER = true
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
GOOGLE.analytics.tracking_id = null
LOGGING.disable_existing_loggers = true
LOGGING.root.handlers = ["null"]
MEDIA_ROOT = "/tmp/oregoninvasiveshotline/test/media"
STATIC_ROOT = "/tmp/oregoninvasiveshotline/test/static"
TEMPLATES.0.APP_DIRS = true

TEST_RUNNER = "oregoninvasiveshotline.testrunner.TestRunner"
