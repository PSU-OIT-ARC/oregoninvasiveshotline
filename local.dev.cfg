[dev]
extends = "local.base.cfg"

;;;
;;; BEGIN ARCUTILS MIGRATED CONFIGURATION
;;;
ENV = "dev"
DEBUG = true
ADMINS = []
ALLOWED_HOSTS = []
MANAGERS = []
SECRET_KEY = "NOT A SECRET"

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"
GOOGLE.analytics.tracking_id = null
INTERNAL_IPS = "oregoninvasiveshotline.utils.settings.INTERNAL_IPS"

; Logging
LOGGING.handlers.console.level = "DEBUG"
LOGGING.loggers.arcutils.handlers = ["console"]
LOGGING.loggers.arcutils.level = "DEBUG"
LOGGING.loggers.{{PACKAGE}}.handlers = ["console"]
LOGGING.loggers.{{PACKAGE}}.level = "DEBUG"

; This causes all django.* loggers (django.request in particular) to
; propagate to the django logger (and use our verbose formatter, but
; that's not the important thing here). Without this, exceptions in app
; code won't be logged anywhere because Django catches them and shows
; its debugging page instead, which isn't very helpful when exceptions
; occur in an AJAX request. I like seeing exceptions in the console
; regardless.
; XXX: Not needed with Django 1.9+
LOGGING.loggers.django.handlers = ["console"]

MEDIA_ROOT  = "{{CWD}}/media"
STATIC_ROOT = "{{CWD}}/static"
TEMPLATES.0.APP_DIRS = true
TEMPLATES.0.OPTIONS.debug = true

; List of settings to import from strings; uses Django's import_string
; utility. If a setting in this list is not a string, its value will not
; be changed.
IMPORT_FROM_STRING = ["INTERNAL_IPS"]
;;;
;;; END ARCUTILS MIGRATED CONFIGURATION
;;;

DATABASES.default.HOST = "172.23.0.1"
HAYSTACK_CONNECTIONS.default.URL = "172.23.0.1:9200"
CELERY_BROKER_URL = "pyamqp://guest:guest@172.23.0.1//"
CELERY_TASK_ALWAYS_EAGER = true

CSRF_COOKIE_HTTPONLY = false
CSRF_COOKIE_SECURE = false
